# Default values for portal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# -- (map) Global configuration options.
global:
  # -- (map) AWS configuration
  aws:
    # -- (bool) Set to true if deploying to AWS. Controls ingress annotations.
    enabled: false
    # -- (string) Credentials for AWS stuff.
    awsAccessKeyId:
    # -- (string) Credentials for AWS stuff.
    awsSecretAccessKey:
  # -- (bool) Whether the deployment is for development purposes.
  dev: true
  # -- (map) Postgres database configuration.
  postgres:
    # -- (bool) Whether the database should be created.
    dbCreate: true
    # -- (map) Master credentials to postgres. This is going to be the default postgres server being used for each service, unless each service specifies their own postgres
    master:
      # -- (string) hostname of postgres server
      host:
      # -- (string) username of superuser in postgres. This is used to create or restore databases
      username: postgres
      # -- (string) password for superuser in postgres. This is used to create or restore databases
      password:
      # -- (string) Port for Postgres.
      port: "5432"
  # -- (string) Environment name. This should be the same as vpcname if you're doing an AWS deployment. Currently this is being used to share ALB's if you have multiple namespaces. Might be used other places too.
  environment: default
  # -- (string) Hostname for the deployment.
  hostname: localhost
  # -- (string) ARN of the reverse proxy certificate.
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  # -- (string) URL of the data dictionary.
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  # -- (string) Portal application name.
  portalApp: gitops
  # -- (string) S3 bucket name for Kubernetes manifest files.
  kubeBucket: kube-gen3
  # -- (string) S3 bucket name for log files.
  logsBucket: logs-gen3
  # -- (bool) Whether public datasets are enabled.
  publicDataSets: true
  # -- (string) Access level for tiers. acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`.
  tierAccessLevel: libre
  # -- (int) Only relevant if tireAccessLevel is set to "regular". Summary charts below this limit will not appear for aggregated data.
  tierAccessLimit: 1000
  # -- (bool) Whether network policies are enabled.
  netPolicy: true
  # -- (int) Number of dispatcher jobs.
  dispatcherJobNum: 10
  # -- (bool) Whether Datadog is enabled.
  ddEnabled: false
  # -- (bool) If the service will be deployed with a Pod Disruption Budget. Note- you need to have more than 2 replicas for the pdb to be deployed.
  pdb: false
  # -- (int) The minimum amount of pods that are available at all times if the PDB is deployed.
  minAvialable: 1

# -- (int) Number of replicas for the deployment.
replicaCount: 1

# -- (map) Docker image information.
image:
  # -- (string) Docker repository.
  repository: quay.io/cdis/data-portal
  # -- (string) Docker pull policy.
  pullPolicy: IfNotPresent
  # -- (string) Overrides the image tag whose default is the chart appVersion.
  tag: "master"

# -- (list) Docker image pull secrets.
imagePullSecrets: []

# -- (string) Override the name of the chart.
nameOverride: ""

# -- (string) Override the full name of the deployment.
fullnameOverride: ""

# -- (map) Service account to use or create.
serviceAccount:
  # -- (bool) Specifies whether a service account should be created.
  create: true
  # -- (map) Annotations to add to the service account.
  annotations: {}
  # -- (string) The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- (map) Annotations to add to the pod
podAnnotations: {}

# -- (map) Security context to apply to the pod
podSecurityContext: {}
  # fsGroup: 2000

# -- (map) Security context to apply to the container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- (map) Kubernetes service information.
service:
  # -- (string) Type of service. Valid values are "ClusterIP", "NodePort", "LoadBalancer", "ExternalName".
  type: ClusterIP
  # -- (int) The port number that the service exposes.
  port: 80

# -- (map) Configuration for autoscaling the number of replicas
autoscaling:
  # -- (bool) Whether autoscaling is enabled
  enabled: false
  # -- (int) The minimum number of replicas to scale down to
  minReplicas: 1
  # -- (int) The maximum number of replicas to scale up to
  maxReplicas: 100
  # -- (int) The target CPU utilization percentage for autoscaling
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- (map) Node selector to apply to the pod
nodeSelector: {}

# -- (list) Tolerations to apply to the pod
tolerations: []

# -- (int) Number of old revisions to retain
revisionHistoryLimit: 2

# -- (map) Rolling update deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    # -- (int) Number of additional replicas to add during rollout.
    maxSurge: 2
    # -- (int) Maximum amount of pods that can be unavailable during the update.
    maxUnavailable: 25%

# -- (map) Affinity to use for the deployment.
affinity:
  podAntiAffinity:
    # -- (map) Option for scheduling to be required or preferred.
    preferredDuringSchedulingIgnoredDuringExecution:
    # -- (int) Weight value for preferred scheduling.
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          # -- (list) Label key for match expression.
          - key: app
            # -- (string) Operation type for the match expression.
            operator: In
            # -- (list) Value for the match expression key.
            values:
            - portal
        # -- (string) Value for topology key label.
        topologyKey: "kubernetes.io/hostname"

# -- (bool) Automount the default service account token
automountServiceAccountToken: false

# -- (map) Resource requests and limits for the containers in the pod
resources:
  # -- (map) The amount of resources that the container requests
  requests:
    # -- (string) The amount of CPU requested
    cpu: 2.0
    # -- (string) The amount of memory requested
    memory: 4096Mi
  # -- (map) The maximum amount of resources that the container is allowed to use
  limits:
    # -- (string) The maximum amount of memory the container can use
    memory: 4096Mi

# Values to determine the labels that are used for the deployment, pod, etc.
# -- (string) Valid options are "production" or "dev". If invalid option is set- the value will default to "dev".
release: "production"
# -- (string) Valid options are "true" or "false". If invalid option is set- the value will default to "false".
criticalService: "true"
# -- (string) Label to help organize pods and their use. Any value is valid, but use "_" or "-" to divide words.
partOf: "Front-End"
# -- (map) Will completely override the selectorLabels defined in the common chart's _label_setup.tpl
selectorLabels:
# -- (map) Will completely override the commonLabels defined in the common chart's _label_setup.tpl
commonLabels:

# Values to configure datadog if ddEnabled is set to "true".
# -- (bool) If enabled, the Datadog Agent will automatically inject Datadog-specific metadata into your application logs.
datadogLogsInjection: true
# -- (bool) If enabled, the Datadog Agent will collect profiling data for your application using the Continuous Profiler. This data can be used to identify performance bottlenecks and optimize your application.
datadogProfilingEnabled: true
# -- (int) A value between 0 and 1, that represents the percentage of requests that will be traced. For example, a value of 0.5 means that 50% of requests will be traced.
datadogTraceSampleRate: 1

# -- (map) GitOps configuration for portal
gitops:
  # -- (string) multiline string - gitops.json
  json: |
    {
        "gaTrackingId": "UA-119127212-1",
        "showArboristAuthzOnProfile": true,
        "showFenceAuthzOnProfile": false,
        "useArboristUI": true,
        "featureFlags": {
          "explorer": true,
          "discovery": true,
          "discoveryUseAggMDS": false
        },
        "explorerConfig":[
          {
            "tabTitle": "Patient",
            "charts": {
              "project_id": {
                "chartType": "stackedBar",
                "title": "project_id"
              },
              "us_core_race": {
                "chartType": "stackedBar",
                "title": "us_core_race"
              },
              "us_core_ethnicity": {
                "chartType": "stackedBar",
                "title": "us_core_ethnicity"
              },
              "gender": {
                "chartType": "stackedBar",
                "title": "gender"
              },
              "maritalStatus": {
                "chartType": "stackedBar",
                "title": "maritalStatus"
              }
            },
            "filters": {
              "tabs": [
                {
                  "title": "Patient",
                  "fields": [
                    "project_id",
                    "us_core_race",
                    "us_core_ethnicity",
                    "gender",
                    "maritalStatus",
                    "quality_adjusted_life_years",
                    "disability_adjusted_life_years"
                  ]
                }
              ]
            },
            "table": {
              "enabled": true,
              "fields": [
                "id",
                "project_id",
                "us_core_race",
                "us_core_ethnicity",
                "gender",
                "maritalStatus",
                "quality_adjusted_life_years",
                "disability_adjusted_life_years"
              ]
            },
            "dropdowns": {},
            "guppyConfig": {
              "dataType": "patient",
              "fieldMapping":   [
                { "field": "quality_adjusted_life_years", "name": "quality_adjusted_life_years" },
                { "field": "disability_adjusted_life_years", "name": "disability_adjusted_life_years" }
              ],
              "nodeCountTitle": "Patients",
              "manifestMapping": {
                "resourceIndexType": "Patient",
                "resourceIdField": "id",
                "referenceIdFieldInResourceIndex": "id",
                "referenceIdFieldInDataIndex": "id"
              },
              "accessibleFieldCheckList": ["project_id"],
              "accessibleValidationField": "project_id"
            }
          },

          {
            "tabTitle": "Observation",
            "charts": {
              "project_id": {
                "chartType": "stackedBar",
                "title": "Project"
              },
              "category": {
                "chartType": "stackedBar",
                "title": "Category"
              },
              "code": {
                "chartType": "stackedBar",
                "title": "Code"
              }
            },
            "filters": {
              "tabs": [
                {
                  "title": "Observation",
                  "fields": [
                    "project_id",
                    "category",
                    "code"
                  ]
                }
              ]
            },
            "table": {
              "enabled": true,
              "fields": [
                "patient_id",
                "project_id",
                "category",
                "code",
                "bodySite",
                "effectiveDateTime",
                "valueBoolean",
                "valueCodeableConcept",
                "valueDateTime",
                "valueInteger",
                "valueQuantity",
                "valueRange",
                "valueRatio",
                "valueSampledData",
                "valueString",
                "interpretation"
              ]
            },
            "dropdowns": {},
            "guppyConfig": {
              "dataType": "observation",
              "fieldMapping":   [],
              "nodeCountTitle": "Observations",
              "manifestMapping": {
                "resourceIndexType": "Patient",
                "resourceIdField": "_patient_id",
                "referenceIdFieldInResourceIndex": "object_id",
                "referenceIdFieldInDataIndex": "object_id"
              },
              "accessibleFieldCheckList": ["project_id"],
              "accessibleValidationField": "project_id"
            }
          },

          {

            "tabTitle": "File",
            "charts": {
              "data_type": {
                "chartType": "stackedBar",
                "title": "File Type"
              },
              "data_format": {
                "chartType": "stackedBar",
                "title": "File Format"
              }
            },
            "filters": {
              "tabs": [
                {
                  "title": "File",
                  "fields": [
                    "project_id",
                    "data_type",
                    "data_format"
                  ]
                }
              ]
            },
            "table": {
              "enabled": true,
              "fields": [
                "project_id",
                "patient_id",
                "object_id",
                "author",
                "content_attachment_url",
                "category",
                "date",
                "data_type",
                "data_format",
                "file_name",
                "content_attachment_size",
                "id",
                "status",
                "type_coding"
              ]
            },
            "dropdowns": {},
            "guppyConfig": {
              "dataType": "file",
              "fieldMapping": [
                { "field": "object_id", "name": "Download ID" },
                { "field": "file_name", "name": "Name" },
                { "field": "data_type", "name": "Type" },
                { "field": "data_format", "name": "Format" }
              ],
              "nodeCountTitle": "Files",
              "manifestMapping": {
                "resourceIndexType": "Patient",
                "resourceIdField": "_patient_id",
                "referenceIdFieldInResourceIndex": "object_id",
                "referenceIdFieldInDataIndex": "object_id"
              },
              "accessibleFieldCheckList": ["project_id"],
              "accessibleValidationField": "project_id",
              "downloadAccessor": "object_id"
            },
            "buttons": [
              {
                "enabled": true,
                "type": "file-manifest",
                "title": "Download Manifest",
                "leftIcon": "datafile",
                "rightIcon": "download",
                "fileName": "file-manifest.json"
              }
            ]
          }
        ],


        "discoveryConfig": {
          "features": {
            "advSearchFilters": {
              "enabled": true,
              "field": "advSearchFilters",
              "filters": [
                {
                  "key": "Research Focus Area"
                },
                {
                  "key": "Administering IC(s)"
                },
                {
                  "key": "Simulated vs. Real Data"
                },
                {
                  "key": "Year Grant Awarded"
                },
                {
                  "key": "Study Description"
                }
              ]
            },
            "exportToWorkspace": {
              "enabled": true,
              "manifestFieldName": "__manifest",
              "enableDownloadManifest": true,
              "downloadManifestButtonText": "Download",
              "documentationLinks": {
                "gen3Client": "https://gen3.org/resources/user/gen3-client/",
                "gen3Workspaces": "https://gen3.org/resources/user/analyze-data/"
              }
            },
            "pageTitle": {
              "enabled": false,
              "text": "Study Discovery"
            },
            "search": {
              "searchBar": {
                "enabled": true
              },
              "tagSearchDropdown": {
                "enabled": true,
                "collapsibleButtonText": "Study Characteristics"
              }
            },
            "authorization": {
              "enabled": false
            }
          },
          "aggregations": [
            {
              "name": "Studies",
              "field": "frontend_uid",
              "type": "count"
            },
            {
              "name": "Total Subjects",
              "field": "_research_subject_count",
              "type": "sum"
            }
          ],
          "tagSelector": {
            "title": "Tags by category"
          },
          "studyColumns": [
            {
              "name": "Study Name",
              "field": "name",
              "errorIfNotAvailable": false,
              "valueIfNotAvailable": "n/a",
              "width": "157px"
            },
            {
              "name": "Full Name",
              "field": "full_name",
              "contentType": "string",
              "errorIfNotAvailable": false,
              "valueIfNotAvailable": "n/a",
              "width": "400px"
            },
            {
              "name": "Number of Subjects",
              "field": "_research_subject_count",
              "errorIfNotAvailable": false,
              "valueIfNotAvailable": "n/a",
              "contentType": "number",
              "width": "98px"
            },
            {
              "name": "ID Number",
              "field": "study_id",
              "errorIfNotAvailable": false,
              "valueIfNotAvailable": "n/a",
              "width": "152px"
            },
            {
              "name": "Data Commons",
              "field": "commons",
              "errorIfNotAvailable": false,
              "valueIfNotAvailable": "n/a",
              "hrefValueFromField": "commons_url"
            }
          ],
          "studyPreviewField": {
            "name": "Description",
            "field": "study_description",
            "contentType": "string",
            "includeName": false,
            "includeIfNotAvailable": true,
            "valueIfNotAvailable": "No description has been provided for this study."
          },
          "studyPageFields": {
            "showAllAvailableFields": false,
            "header": {
              "field": "name"
            },
            "fieldsToShow": [
              {
                "groupName": "Study Identifiers",
                "groupWidth": "half",
                "includeName": false,
                "fields": [
                  {
                    "name": "Number of Subjects",
                    "field": "_subjects_count",
                    "contentType": "number"
                  },
                  {
                    "name": "Full Name",
                    "field": "full_name",
                    "contentType": "string"
                  },
                  {
                    "name": "Short Name",
                    "field": "short_name",
                    "contentType": "string",
                    "includeName": true,
                    "includeIfNotAvailable": true,
                    "valueIfNotAvailable": "N/A"
                  },
                  {
                    "name": "dbGaP Accession Number",
                    "field": "dbgap_accession",
                    "contentType": "string",
                    "includeName": true,
                    "includeIfNotAvailable": false
                  },
                  {
                    "name": "Project ID",
                    "field": "project_id",
                    "contentType": "string",
                    "includeIfNotAvailable": false
                  },
                  {
                    "name": "Data Commons",
                    "field": "commons",
                    "contentType": "string",
                    "includeIfNotAvailable": false
                  }
                ]
              },
              {
                "groupWidth": "full",
                "fields": [
                  {
                    "name": "Description",
                    "field": "study_description",
                    "contentType": "paragraphs",
                    "includeName": true,
                    "includeIfNotAvailable": true,
                    "valueIfNotAvailable": "No description has been provided for this study."
                  }
                ]
              }
            ]
          },
          "minimalFieldMapping": {
            "tagsListFieldName": "tags",
            "authzField": "authz",
            "uid": "frontend_uid"
          },
          "tagCategories": [
            {
              "name": "Commons",
              "displayName": "Data Commons",
              "color": "rgba(129, 211, 248, 1)",
              "display": true
            },
            {
              "name": "Program",
              "color": "rgba(129, 211, 248, 1)",
              "display": false
            },
            {
              "name": "Study Registration",
              "color": "rgba(236, 128, 141, 1)",
              "display": false
            },
            {
              "name": "Data Type",
              "color": "rgba(112, 182, 3, 1)",
              "display": false
            },
            {
              "name": "primary_site",
              "color": "rgba(112, 182, 3, 1)",
              "display": false
            },
            {
              "name": "disease_type",
              "color": "rgba(112, 182, 3, 1)",
              "display": false
            },
            {
              "name": "data_type",
              "color": "rgba(112, 182, 3, 1)",
              "display": false
            },
            {
              "name": "clinical_study_type",
              "color": "rgba(112, 182, 3, 1)",
              "display": false
            }
          ]
        },

        "components": {
          "appName": "ACED",
          "index": {
            "introduction": {
              "heading": "ACED",
              "text": "We are uniting world leading researchers to tackle the biggest challenges in early detection, an important area of unmet clinical need. Scientists in the Alliance are working together at the forefront of technological innovation to translate research into realistic ways to improve cancer diagnosis, which can be implemented into health systems and meaningfully benefit people with cancer."
            },
            "buttons": [
              {
                "name": "Data Dictionary",
                "icon": "data-field-define",
                "body": "Browse the nodes and properties of the graph data model used in the Open Access Data Commons.",
                "link": "/DD",
                "label": "Explore Data Model"
              },
              {
                "name": "Discover Study Metadata",
                "icon": "data-explore",
                "body": "Discover study descriptions and other metadata stored on the Data Commons",
                "link": "/discovery",
                "label": "Discover Study Metadata"
              }
            ]

          },
          "navigation": {
            "items": [
              {
                "icon": "query",
                "link": "/discovery",
                "name": "Discovery",
                "tooltip": "Use free-text search and tags to rapidly find relevant studies."
              },
              {
                "icon": "dictionary",
                "link": "/DD",
                "color": "#a2a2a2",
                "name": "Dictionary",
                "tooltip": "The Data Dictionary serves to inform the data model and is updated as new data is ingested."
              },
              {
                "icon": "exploration",
                "link": "/explorer",
                "color": "#a2a2a2",
                "name": "Exploration",
                "tooltip": "The Exploration Page enables discovery of the data at the subject level and features a cohort builder."
              },
              {
                "icon": "query",
                "link": "/query",
                "color": "#a2a2a2",
                "name": "Query",
                "tooltip": "Query the databases using GraphiQL."
              },
              {
                "icon": "profile",
                "link": "/identity",
                "color": "#a2a2a2",
                "name": "Profile",
                "tooltip": "Create API keys for programmatic data access, and review your authorization privileges to datasets and services."
              }
            ]
          },
          "topBar": {
            "items": [
              {
                "link": "https://www.cancerresearchuk.org/funding-for-researchers/research-opportunities-in-early-detection-and-diagnosis/international-alliance-for-cancer-early-detection",
                "name": "ACED"
              }
            ]
          },
          "login": {
            "title": "ACED",
            "subTitle": "Explore, Analyze, and Share Data",
            "text": "We are uniting world leading researchers to tackle the biggest challenges in early detection, an important area of unmet clinical need. Scientists in the Alliance are working together at the forefront of technological innovation to translate research into realistic ways to improve cancer diagnosis, which can be implemented into health systems and meaningfully benefit people with cancer.",
            "contact": "If you have any questions about access or the registration process, please contact ",
            "email": "support@datacommons.io",
            "image": "gene"
          },
          "footerLogos": [
          ]
        },

        "resourceBrowser": {
            "title": "My Data Commons' Jupyter Notebooks",
            "description": "Here's a collection of notebooks I'm proud of",
            "public": true,
            "resources": [
                {
                    "title": "Custom Notebook",
                    "category": "Notebooks",
                    "description": "This is a custom notebook that generates a bunch of charts",
                    "link": "https://blah.net/notebooks/nb.html",
                    "imageUrl": "/src/img//resource-browser/notebook_gene.png"
                },
                {
                    "title": "Custom Notebook 2",
                    "link": "/notebooks/nb.html",
                    "imageUrl": "/src/img/gen3.png"
                }
            ]
        },

        "graphql": {
          "boardCounts": [
            {
              "graphql": "_research_subject_count",
              "name": "research_subject",
              "plural": "research_subjects"
            },
            {
              "graphql": "_specimen_count",
              "name": "specimen",
              "plural": "specimens"
            },
            {
              "graphql": "_observation_count",
              "name": "observation",
              "plural": "observations"
            }
          ],
          "chartCounts": [
            {
              "graphql": "_research_subject_count",
              "name": "research_subjects"
            }
          ],
          "projectDetails": "boardCounts"
        }

      }
  # -- (string) - favicon in base64
  favicon:
    "AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQv3IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1MiCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwKg0Nd6yqf+8pi7D3rKp/96yqf/esqn/3rKp/76qNMPEpU2QxbFJNwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/7WfF3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMWySQAAAAAA3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/TrIS0AAAAAL+nLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxmAIAxrhKBregGtLesqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/2MyPCLGaCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs5kJANqvn0vesqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/18l+GwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKuSAADq5L8H3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/z79qBca0SwAAAAAAAAAAAAAAAAAAAAAAAAAAAN6yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf+4oR3YAAAAAAAAAAAAAAAAAAAAAAAAAAC4oBlZ3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/AqC/N3rKp/96yqf+/rD3M3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf+4oyBkAAAAAAAAAAAAAAAAAAAAAN6yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf+9qDAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzb1oH96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/8qoYv8AAAAAAAAAALefHQC4oB5X3rKp/96yqf/esqn/AAAAAAAAAADm3bsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOHbrAAAAAAA6ePTEd6yqf/esqn/3rKp/8CsNngAAAAAAAAAAN6yqf/esqn/3rKp/////xIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq4bwA08V3EN6yqf/esqn/3rKp/wAAAAAAAAAA3rKp/96yqf+6nyfZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3rKp/96yqf/esqn/AAAAALyjJDbesqn/3rKp/7ihIc0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADFpE7l3rKp/96yqf/esqn/wq0+Wd6yqf/esqn/3rKp/wAAAADPwW4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7pCAAAAAAAN6yqf/esqn/3rKp/8CsOVK6oyF63rKp/96yqf/esqn/uqQqxAAAAAC7oyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtZ8WAAAAAADesqn/3rKp/96yqf/esqn/3rKp/7ukIHresqn/3rKp/96yqf/esqn/3rKp/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3rKp/96yqf/esqn/3rKp/96yqf/esqn/wK1BXN6yqf/esqn/3rKp/96yqf/esqn/uKAYUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL+oO1Hesqn/3rKp/96yqf/esqn/3rKp/76pLXq3nx023rKp/96yqf/esqn/3rKp/96yqf/esqn/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAt58l896yqf/esqn/3rKp/96yqf/esqn/3rKp/wAAAADesqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/xrRRVQAAAADYzYkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM67agAAAAAAybZYUt6yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/9+/UXAAAAAN6yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/wAAAACznRMAtJ4ZV96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADesqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/ArDZ4AAAAAAAAAAAAAAAA3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/yqdi/wAAAAAAAAAAAAAAAAAAAADHplZ93rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/6Ny8U+bauVDesqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf+5oyBkAAAAAAAAAAAAAAAAAAAAAAAAAADesqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/t6Ec1wAAAAAAAAAAAAAAAAAAAAAAAAAAs5sWAOHUlQfesqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/OxHUFxbRJAAAAAAAAAAAAAAAAAAAAAAAAAAAAsJkFAN6yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/29COIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr5YBAN6yqf+7pSf43rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/uaMf+d2xp6MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyrhUAAAAAAC7pil73rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/7miH38AAAAAxrJDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADi150b2K6T4N6yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/96yqf/esqn/3rKp/7mjI5zUxHAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOnftwAAAAAAAAAAAN6yqf/esqn/3rKp/7egG+e2nxf/uKAk/7mjIvPesqn/3rKp/7agGEAAAAAAAAAAANnOjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///////wD///gAP//gAAf/wAAD/4AAAf8AAAD+AAAAfgAAAHwA/wA8f//+OP///xj///8Y////CP///xh///4IP//8CD///Bgf//gID//wGAP/wBwB/4A8AP8APgAYAH4AAAB/AAAA/wAAAf+AAAH/8AAP//"
  # -- (string) - multiline string - gitops.css
  css: |
    /* gitops default css */
  # -- (string) - logo in base64
  