# Default values for argo-wrapper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.



#Configmap
podAnnotations: {"gen3.io/network-ingress": "argo-wrapper"}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

replicaCount: 1

revisionHistoryLimit: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

datadog: argo-wrapper
netnolimit: 'yes'
public: 'yes'

affinity: 
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - argo-wrapper
        topologyKey: "kubernetes.io/hostname"

volumes:
  - name: argo-config
    configMap:
      name: manifest-argo

image:
  repository: quay.io/cdis/argo-wrapper
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

livenessProbe:
  httpGet:
    path: /test
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 30

ports:
  - containerPort: 8000
    protocol: TCP

volumeMounts:
  - name: argo-config
    readOnly: true
    mountPath: /argo.json
    subPath: argo.json

resources:
  limits:
    cpu: '100m'
    memory: '128Mi'


#Service and Pod
service:
  type: ClusterIP
  port: 8000



#Configmap
scaling_groups:
  scaling_groups:
    test 1: workflow 1
    test 2: workflow 2

s3_bucket: "argo-artifact-storage-test"
internal_s3_bucket: "gen3-argo-testawsaccountid-vpcname"
indexd_admin_user: "user"
environment: "default"
pvc: "test-pvc"



#Ingress
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local