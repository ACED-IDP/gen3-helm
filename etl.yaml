kind: Pod 
apiVersion: v1 
metadata:
  name: etl

spec:
  volumes:
    # To create the crredentials config run --
    # kubectl create configmap gen3-credentials --from-file Secrets
    - name: gen3-credentials
      configMap:
        name: gen3-credentials

    - name: sheepdog-dbcreds
      secret:
        secretName: sheepdog-dbcreds

    - name: useryaml
      configMap:
        name: useryaml

    - name: studies-mount
      hostPath:
        path: /Users/walsbr/aced/data_model/studies

    - name: output-mount
      hostPath:
        path: /Users/walsbr/aced/data_model/output

    - name: my-certificate-authority-mount
      hostPath:
        path: /Users/walsbr/aced/gen3-helm/Secrets/TLS/myCA.pem

  containers:
    - name: container-configmap
      image: quay.io/ohsu-comp-bio/aced-etl:latest
      volumeMounts:
        # Gen3 credentials file
        - name: gen3-credentials
          mountPath: /creds/credentials.json
          subPath: credentials.json

        # Sheepdog creds, secrets defined in helm/sheepdog/templates/deployment.yaml
        - name: sheepdog-dbcreds
          mountPath: /creds/sheepdog-creds

        # User yaml, configmap defined in helm/fence/templates/useryaml-job.yaml
        - name: useryaml
          mountPath: /creds/user.yaml
          subPath: useryaml

        # studies metadata
        - name: studies-mount
          mountPath: /studies

        # studies files
        - name: output-mount
          mountPath: /output

        # custom certificate
        - name: my-certificate-authority-mount
          mountPath: /usr/local/share/ca-certificates/myCA.crt
#          subPath: myCA.pem

      command: ["/bin/bash" ]
      args:
        - "-c"
        - |
          # Add the revproxy-service IP address to the pod's hosts file
          echo $REVPROXY_SERVICE_SERVICE_HOST aced-training.compbio.ohsu.edu >> /etc/hosts
          


          # Install network and development tools. gcc is necessary for installing the gen3 SDK.
          apt-get -y update; apt-get -y install curl iputils-ping gcc

          # move the credentials file to a well known spot
          # https://github.com/uc-cdis/gen3sdk-python/blob/master/docs/reference/sdkClasses.md#gen3auth
          mkdir ~/.gen3
          cp /creds/credentials.json ~/.gen3/credentials.json

          # Install dependencies
          apt install git libpq-dev python3-dev build-essential vim unzip  -y
          
          # use our CA
          update-ca-certificates
          
          # Until we fix in helm env, setup well known postgres env variables
          cat  << EOF >> ~/.bashrc
          export PGDB=`cat /creds/sheepdog-creds/database`
          export PGPASSWORD=`cat /creds/sheepdog-creds/password`
          export PGUSER=`cat /creds/sheepdog-creds/username`
          export PGHOST=`cat /creds/sheepdog-creds/host`
          export DBREADY=`cat /creds/sheepdog-creds/dbcreated`
          export PGPORT=`cat /creds/sheepdog-creds/port`
          export REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
          EOF

          git clone https://github.com/ACED-IDP/data_model
          cd data_model
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          # mac silicon, build from scratch, avoids Postgresql SCRAM authentication problem
          pip install  psycopg2

          # link back to mounted volumes
          ln -s /studies /data_model/studies
          ln -s /output /data_model/output
          
          echo "Done setting up data_model"


          # For development purposes, extends the lifespan of the pod to let us exec into it.
          while true; do sleep 30; done;
#  nodeSelector:
#        eks.amazonaws.com/nodegroup: aced-commons-etl-node-group
