kind: Pod 
apiVersion: v1 
metadata:
  name: etl

spec:
  volumes:
    # To create the credentials config run --
    # kubectl create configmap gen3-credentials --from-file Secrets
    - name: gen3-credentials
      configMap:
        name: gen3-credentials

    - name: studies-mount
      # {{- if $.Values.global.dev }}          
      hostPath:
        path: /Users/walsbr/aced/data_model/studies
      # {{- else }}
      # {{- end }}

    - name: output-mount
      # {{- if $.Values.global.dev }}          
      hostPath:
        path: /Users/walsbr/aced/data_model/output
      # {{- else }}
      # {{- end }}

  containers:
    - name: container-configmap
      image: quay.io/ohsu-comp-bio/aced-etl:latest
      volumeMounts:
        # ETL AWS credentials file
        - name: gen3-credentials
          mountPath: /root/.aws/credentials
          subPath: etl-aws-credentials

        # Fence config file
        - name: gen3-credentials
          mountPath: /creds/fence-config.yaml
          subPath: fence-config.yaml

      command: ["/bin/bash" ]
      args:
        - "-c"
        - |
          apt-get update && apt-get install -y wget
          export VERSION=v4.34.1
          export BINARY=yq_linux_amd64
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\
            tar xz && mv ${BINARY} /usr/bin/yq

          export BUCKETS_FILE=/creds/allowed_data_upload_buckets
          yq '.fence.FENCE_CONFIG.ALLOWED_DATA_UPLOAD_BUCKETS | @csv' /creds/fence-config.yaml > $BUCKETS_FILE

          # For development purposes, extends the lifespan of the pod to let us exec into it.
          while true; do sleep 30; done;
  
  # {{- if $.Values.global.dev }}
  # nodeSelector:
  #       eks.amazonaws.com/nodegroup: aced-commons-development-etl-node-group
  # {{- end }}
